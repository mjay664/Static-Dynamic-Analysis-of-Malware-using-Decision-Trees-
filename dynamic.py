import os
import json
import pickle
from csv import writer


summary_list = ['file_written', 'regkey_deleted', 'mutex', 'connects_ip', 'regkey_read', 'tls_master', 'regkey_written', 
                'command_line', 'regkey_opened', 'file_failed', 'file_opened', 'dll_loaded', 'file_copied', 'file_deleted',
                'connects_host', 'file_moved', 'file_recreated', 'guid', 'file_created', 'directory_enumerated', 'file_exists', 
                'file_read', 'resolves_host', 'directory_created', 'directory_removed']

net_keys = ['udp', 'http', 'icmp', 'smtp', 'tcp']


def extractfeatures(dir):
    feature_table = []
    file_name_table = []
    x = os.listdir(dir)
    for i in x:
        file_name_table.append(i[:-5])
        features = []
        with open(os.path.join(dir, i)) as f:
            data = json.load(f)
            f.close()

            # from info section
            if data['info'].get('duration', 0) != 0:
                features.append(data['info']['duration'])
            else:
                features.append(0)
            
            if data['info'].get('score', 0) != 0:
                features.append(data['info']['score'])
            else:
                features.append(0)

            # from target section
            if data['target']['file'].get('size', 0) != 0:
                features.append(data['target']['file']['size'])
            else:
                features.append(0)

            #from network section
            for k in net_keys:
                if data['network'].get(k, 0) != 0:
                    features.append(len(data['network'][k]))
                else:
                    features.append(0)
            
            # from behavior section
            summary = data['behavior']['summary']
            for k in summary_list:
                if summary.get(k, 0) != 0:
                    features.append(len(summary[k]))
                else:
                    features.append(0)

        if len(features) == 0:
            features = [i for i in range(33)]

        feature_table.append(features)
        
    return feature_table, file_name_table


if __name__ == "__main__":
    path = input('Enter the path: ')

    features, files = extractfeatures(path)

    model = pickle.load(open('dt_model_dynamic', 'rb'))

    predictions = model.predict(features)

    final_list = []
    for i in range(len(predictions)):
        if predictions[i]:
            final_list.append([files[i], 'M'])
        else:
            final_list.append([files[i], 'B'])

    with open("dynamic.csv", "w", newline='') as f:
        writer = writer(f)
        writer.writerow(['FILE_HASH', 'Predicted Label'])
        writer.writerows(final_list)
    